{"version":3,"sources":["tactic/adapters/application.js","tactic/app.js","tactic/components/select-on-focus-input.js","tactic/controllers/application.js","tactic/controllers/entry.js","tactic/controllers/index.js","tactic/helpers/format-duration.js","tactic/initializers/app-version.js","tactic/initializers/ember-moment.js","tactic/initializers/export-application-global.js","tactic/models/entry-form.js","tactic/models/entry-list.js","tactic/models/entry.js","tactic/models/project.js","tactic/models/user.js","tactic/router.js","tactic/routes/index.js","tactic/routes/login.js","tactic/serializers/application.js","tactic/templates/application.js","tactic/templates/entry-edit.js","tactic/templates/index.js","tactic/templates/login.js","tactic/tests/adapters/application.jshint.js","tactic/tests/app.jshint.js","tactic/tests/components/select-on-focus-input.jshint.js","tactic/tests/controllers/application.jshint.js","tactic/tests/controllers/entry.jshint.js","tactic/tests/controllers/index.jshint.js","tactic/tests/helpers/format-duration.jshint.js","tactic/tests/helpers/resolver.js","tactic/tests/helpers/resolver.jshint.js","tactic/tests/helpers/start-app.js","tactic/tests/helpers/start-app.jshint.js","tactic/tests/models/entry-form.jshint.js","tactic/tests/models/entry-list.jshint.js","tactic/tests/models/entry.jshint.js","tactic/tests/models/project.jshint.js","tactic/tests/models/user.jshint.js","tactic/tests/router.jshint.js","tactic/tests/routes/index.jshint.js","tactic/tests/routes/login.jshint.js","tactic/tests/serializers/application.jshint.js","tactic/tests/test-helper.js","tactic/tests/test-helper.jshint.js","tactic/tests/unit/controllers/entry-test.js","tactic/tests/unit/controllers/entry-test.jshint.js","tactic/tests/unit/controllers/index-test.js","tactic/tests/unit/controllers/index-test.jshint.js","tactic/tests/unit/models/entry-list-test.js","tactic/tests/unit/models/entry-list-test.jshint.js","tactic/tests/unit/models/entry-test.js","tactic/tests/unit/models/entry-test.jshint.js","tactic/tests/unit/models/project-test.js","tactic/tests/unit/models/project-test.jshint.js","tactic/tests/unit/routes/index-test.js","tactic/tests/unit/routes/index-test.jshint.js","tactic/tests/utils/format-duration.jshint.js","tactic/tests/utils/group-by.jshint.js","tactic/tests/views/entry-edit.jshint.js","tactic/utils/format-duration.js","tactic/utils/group-by.js","tactic/views/entry-edit.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('tactic/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].ActiveModelAdapter.extend({\n    namespace: \"api\"\n  });\n\n});","define('tactic/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'tactic/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('tactic/components/select-on-focus-input', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].TextField.extend({\n    selectOnFocus: (function () {\n      this.$().select();\n    }).on(\"focusIn\")\n  });\n\n});","define('tactic/controllers/application', ['exports', 'ember', 'moment'], function (exports, Ember, moment) {\n\n  'use strict';\n\n  function isFilled(entry) {\n    return entry.get(\"startedAt\") && entry.get(\"finishedAt\");\n  }\n\n  function isInCurrentWeek(entry, startOfWeek) {\n    var startedAt = entry.get(\"startedAt\");\n    var date = new Date(startedAt.getFullYear(), startedAt.getMonth(), startedAt.getDate());\n    return date.getTime() - startOfWeek.getTime() >= 0;\n  }\n\n  function belongsTo(entry, user) {\n    return entry.get(\"user.id\") === user.id;\n  }\n\n  function projectsDuration(entries) {\n    var projects = entries.mapProperty(\"project\").uniq(),\n        projectEntries,\n        duration;\n    return projects.map(function (project) {\n      projectEntries = entries.filterProperty(\"project.id\", project ? project.get(\"id\") : null);\n      duration = projectEntries.reduce(function (s, entry) {\n        return s + entry.get(\"duration\");\n      }, 0);\n      return Ember['default'].Object.create({ project: project, duration: duration });\n    }).sortBy(\"duration\").reverse();\n  }\n\n  function totalProjectsDuration(durations) {\n    return durations.reduce(function (s, projectDuration) {\n      return s + projectDuration.get(\"duration\");\n    }, 0);\n  }\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: \"index\",\n\n    currentUser: null,\n\n    entriesInCurrentWeek: (function () {\n      var startOfCurrentWeek = moment['default']().startOf(\"isoWeek\").toDate();\n      return this.store.filter(\"entry\", function (entry) {\n        return isFilled(entry) && isInCurrentWeek(entry, startOfCurrentWeek);\n      });\n    }).property(),\n\n    projectsDurationInCurrentWeek: (function () {\n      return projectsDuration(this.get(\"entriesInCurrentWeek\"));\n    }).property(\"entriesInCurrentWeek.@each.duration\", \"entriesInCurrentWeek.@each.project\"),\n\n    totalDurationInCurrentWeek: (function () {\n      return totalProjectsDuration(this.get(\"projectsDurationInCurrentWeek\"));\n    }).property(\"projectsDurationInCurrentWeek.@each.duration\"),\n\n    myEntriesInCurrentWeek: (function () {\n      var startOfCurrentWeek = moment['default']().startOf(\"isoWeek\").toDate(),\n          user = this.get(\"currentUser\");\n      return this.store.filter(\"entry\", function (entry) {\n        return isFilled(entry) && belongsTo(entry, user) && isInCurrentWeek(entry, startOfCurrentWeek);\n      });\n    }).property(\"currentUser\"),\n\n    myProjectsDurationInCurrentWeek: (function () {\n      return projectsDuration(this.get(\"myEntriesInCurrentWeek\"));\n    }).property(\"myEntriesInCurrentWeek.@each.duration\", \"myEntriesInCurrentWeek.@each.project\"),\n\n    myTotalDurationInCurrentWeek: (function () {\n      return totalProjectsDuration(this.get(\"myProjectsDurationInCurrentWeek\"));\n    }).property(\"myProjectsDurationInCurrentWeek.@each.duration\")\n  });\n\n});","define('tactic/controllers/entry', ['exports', 'ember', 'tactic/models/entry-form'], function (exports, Ember, EntryForm) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend({\n    needs: \"index\",\n\n    isEditing: null,\n\n    differedStartedAtDay: (function () {\n      return this.get(\"startedAtDay\");\n    }).property(),\n    differedStartedAtTime: (function () {\n      return this.get(\"startedAtTime\");\n    }).property(),\n    differedFinishedAtTime: (function () {\n      return this.get(\"finishedAtTime\");\n    }).property(),\n\n    // Used to restore an entry as ember-data does not restore\n    // belongs_to relationship\n    initialProject: null,\n    setInitialProject: (function () {\n      this.set(\"initialProject\", this.get(\"project\"));\n    }).on(\"init\"),\n\n    startedAtTime: (function () {\n      return this.get(\"startedAt\").getTime();\n    }).property(\"startedAt\"),\n\n    finishedAtTime: (function () {\n      return this.get(\"finishedAt\").getTime();\n    }).property(\"finishedAt\"),\n\n    projectNameChanged: (function () {\n      if (this.get(\"editForm.projectNameHasChanged\")) {\n        this.send(\"searchProjects\");\n      }\n    }).observes(\"editForm.projectNameHasChanged\"),\n\n    projectTimer: null,\n\n    deleteEntryTimer: null,\n    isDeleting: Ember['default'].computed.bool(\"deleteEntryTimer\"),\n    editFocus: null,\n\n    saveEntryTimer: null,\n    saveScheduled: Ember['default'].computed.bool(\"saveEntryTimer\"),\n\n    _findProjects: function () {\n      var editForm = this.get(\"editForm\");\n      this.store.find(\"project\", { name: editForm.get(\"projectName\") }).then(function (projects) {\n        editForm.set(\"projectChoices\", projects.toArray());\n      });\n    },\n\n    actions: {\n      editEntry: function (editFocus) {\n        if (this.get(\"controllers.index.hasEdit\")) {\n          return;\n        }\n        var saveTimer = this.get(\"saveEntryTimer\");\n        if (saveTimer) {\n          Ember['default'].run.cancel(saveTimer);\n          this.set(\"saveEntryTimer\", null);\n        }\n        var deleteTimer = this.get(\"deleteEntryTimer\");\n        if (deleteTimer) {\n          this.send(\"cancelDeleteEntry\");\n        }\n        this.setProperties({\n          editFocus: editFocus,\n          editForm: EntryForm['default'].create({ entry: this.get(\"content\") }),\n          isEditing: true\n        });\n      },\n      scheduleSaveEntry: function () {\n        var editForm = this.get(\"editForm\");\n        if (editForm.get(\"isValid\")) {\n          editForm.update();\n          var saveTimer = Ember['default'].run.later(this, function () {\n            this.send(\"saveEntry\");\n          }, 3000);\n          this.setProperties({\n            isEditing: false,\n            saveEntryTimer: saveTimer\n          });\n        }\n      },\n      cancelSaveEntry: function () {\n        var saveTimer = this.get(\"saveEntryTimer\");\n        if (saveTimer) {\n          Ember['default'].run.cancel(saveTimer);\n          this.set(\"saveEntryTimer\", null);\n          this.send(\"restoreEntry\");\n        }\n      },\n      saveEntry: function () {\n        this.get(\"content\").save();\n        this.setInitialProject();\n        this.notifyPropertyChange(\"differedStartedAtDay\");\n        this.notifyPropertyChange(\"differedStartedAtTime\");\n        this.notifyPropertyChange(\"differedFinishedAtTime\");\n        this.setProperties({\n          editForm: null,\n          isEditing: false,\n          saveEntryTimer: null\n        });\n      },\n      restoreEntry: function () {\n        this.set(\"project\", this.get(\"initialProject\"));\n        this.get(\"content\").rollback();\n        this.set(\"isEditing\", false);\n      },\n      deleteEntry: function () {\n        function deleteEntry() {\n          this.set(\"deleteEntryTimer\", null);\n          this.get(\"content\").destroyRecord();\n        }\n        var deleteEntryTimer = Ember['default'].run.later(this, deleteEntry, 5000);\n        this.set(\"deleteEntryTimer\", deleteEntryTimer);\n      },\n      cancelDeleteEntry: function () {\n        var deleteTimer = this.get(\"deleteEntryTimer\");\n        if (deleteTimer) {\n          Ember['default'].run.cancel(deleteTimer);\n          this.set(\"deleteEntryTimer\", null);\n        }\n      },\n      searchProjects: function () {\n        var previousTimer = this.get(\"projectTimer\");\n        if (previousTimer) {\n          Ember['default'].run.cancel(previousTimer);\n          this.set(\"projectTimer\", null);\n        }\n        if (this.get(\"editForm.projectNameIsEmpty\")) {\n          this.send(\"selectProject\", null);\n        } else {\n          var timer = Ember['default'].run.later(this, this._findProjects, 700);\n          this.set(\"projectTimer\", timer);\n        }\n      },\n      selectProject: function (project) {\n        this.get(\"editForm\").selectProject(project);\n      }\n    }\n  });\n\n});","define('tactic/controllers/index', ['exports', 'ember', 'tactic/utils/format-duration', 'tactic/utils/group-by', 'tactic/models/entry-list'], function (exports, Ember, formatDuration, groupBy, EntryList) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n    needs: \"application\",\n\n    itemController: \"entry\",\n\n    entriesByDay: groupBy['default'](\"@this.@each.differedStartedAtDay\", \"differedStartedAtDay\", EntryList['default']),\n\n    timerStarted: Ember['default'].computed.notEmpty(\"newEntry.startedAt\"),\n    newEntry: null,\n    newEntryDuration: \"0:00:00\",\n\n    hasEdit: (function () {\n      return this.someProperty(\"isEditing\");\n    }).property(\"@each.isEditing\"),\n\n    // A change on `Entry#projectName` is unexpectedly sent by Ember while its value remains\n    // the same. The hack below prevents firing observers when the project name does not really\n    // change\n\n    latestEntryProjectName: null,\n    newEntryProjectNameChanged: (function () {\n      var newProjectName = this.get(\"newEntry.projectName\");\n      if (newProjectName !== this.get(\"latestEntryProjectName\")) {\n        this.set(\"latestEntryProjectName\", newProjectName);\n      }\n    }).observes(\"newEntry.projectName\").on(\"init\"),\n\n    newEntryProjectNameBinding: Ember['default'].Binding.oneWay(\"latestEntryProjectName\"),\n    runSearchProjects: (function () {\n      if (this.get(\"newEntryProjectName\") !== this.get(\"latestEntryProjectName\")) {\n        this.send(\"searchProjectsAndStartTimer\");\n      }\n    }).observes(\"newEntryProjectName\"),\n\n    projectTimer: null,\n    projectChoices: null,\n\n    buildNewEntry: function () {\n      var user = this.get(\"controllers.application.currentUser\");\n      var newEntry = this.store.createRecord(\"entry\", { user: user });\n      this.set(\"newEntry\", newEntry);\n    },\n\n    _findProjects: function () {\n      var projectName = this.get(\"newEntryProjectName\");\n      var self = this;\n      this.store.find(\"project\", { name: projectName }).then(function (projects) {\n        self.set(\"projectChoices\", projects.toArray());\n      });\n    },\n\n    actions: {\n      startTimer: function () {\n        if (this.get(\"newEntry.startedAt\")) {\n          return;\n        }\n\n        var startedAt = new Date();\n        this.get(\"newEntry\").set(\"startedAt\", startedAt);\n\n        function updateDuration() {\n          if (startedAt === this.get(\"newEntry.startedAt\")) {\n            var newDuration = formatDuration['default'](new Date().getTime() - startedAt.getTime());\n            this.set(\"newEntryDuration\", newDuration);\n            Ember['default'].run.later(this, updateDuration, 500);\n          } else {\n            this.set(\"newEntryDuration\", \"0:00:00\");\n          }\n        }\n        updateDuration.call(this);\n      },\n      stopTimer: function () {\n        var newEntry = this.get(\"newEntry\"),\n            self = this;\n        newEntry.set(\"finishedAt\", new Date());\n        newEntry.save().then(function () {\n          self.buildNewEntry();\n        });\n      },\n      searchProjectsAndStartTimer: function () {\n        var previousTimer = this.get(\"projectTimer\");\n        if (previousTimer) {\n          Ember['default'].run.cancel(previousTimer);\n          this.set(\"projectTimer\", null);\n        }\n        if (!Ember['default'].isEmpty(this.get(\"newEntryProjectName\"))) {\n          var timer = Ember['default'].run.later(this, this._findProjects, 700);\n          this.set(\"projectTimer\", timer);\n        } else {\n          this.send(\"selectProject\", null);\n        }\n        this.send(\"startTimer\");\n      },\n      selectProject: function (project) {\n        this.set(\"projectChoices\", null);\n        this.get(\"newEntry\").set(\"project\", project);\n        this.notifyPropertyChange(\"latestEntryProjectName\");\n      }\n    }\n  });\n\n});","define('tactic/helpers/format-duration', ['exports', 'ember', 'tactic/utils/format-duration'], function (exports, Ember, formatDuration) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(function (value) {\n    return new Ember['default'].Handlebars.SafeString(formatDuration['default'](value));\n  });\n\n});","define('tactic/initializers/app-version', ['exports', 'tactic/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function (container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('tactic/initializers/ember-moment', ['exports', 'ember-moment/helpers/moment', 'ember-moment/helpers/ago', 'ember'], function (exports, moment, ago, Ember) {\n\n  'use strict';\n\n  var initialize = function () {\n    Ember['default'].Handlebars.helper(\"moment\", moment.moment);\n    Ember['default'].Handlebars.helper(\"ago\", ago.ago);\n  };\n\n  exports['default'] = {\n    name: \"ember-moment\",\n\n    initialize: initialize\n  };\n  /* container, app */\n\n  exports.initialize = initialize;\n\n});","define('tactic/initializers/export-application-global', ['exports', 'ember', 'tactic/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('tactic/models/entry-form', ['exports', 'moment', 'ember'], function (exports, moment, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend({\n    entry: null,\n\n    // A change on `Entry#projectName` is unexpectedly sent by Ember while its value remains\n    // the same. The hack below prevents firing observers when the project name does not really\n    // change\n    entryProjectName: (function () {\n      return this.get(\"entry.project.name\");\n    }).property(),\n    entryProjectNameChanged: (function () {\n      var entryProjectName = this.get(\"entry.project.name\");\n      if (entryProjectName !== this.get(\"entryProjectName\")) {\n        this.set(\"entryProjectName\", entryProjectName);\n      }\n    }).observes(\"entry.project.name\"),\n\n    projectNameBinding: Ember['default'].Binding.oneWay(\"entryProjectName\"),\n    projectNameHasChanged: (function () {\n      return this.get(\"projectName\") !== this.get(\"project.name\");\n    }).property(\"projectName\"),\n    projectNameIsEmpty: Ember['default'].computed.empty(\"projectName\"),\n    projectBinding: Ember['default'].Binding.oneWay(\"entry.project\"),\n\n    titleBinding: Ember['default'].Binding.oneWay(\"entry.title\"),\n    startedAtDayBinding: Ember['default'].Binding.oneWay(\"entry.startedAtDay\"),\n    startedAtHourBinding: Ember['default'].Binding.oneWay(\"entry.startedAtHour\"),\n    finishedAtHourBinding: Ember['default'].Binding.oneWay(\"entry.finishedAtHour\"),\n\n    startedAt: (function () {\n      var day = this.get(\"startedAtDay\"),\n          hour = this.get(\"startedAtHour\");\n      return moment['default'](day + \" \" + hour, \"YYYY-MM-DD HH:mm\").toDate();\n    }).property(\"startedAtDay\", \"startedAtHour\"),\n\n    finishedAt: (function () {\n      var day = this.get(\"startedAtDay\"),\n          hour = this.get(\"finishedAtHour\");\n      return moment['default'](day + \" \" + hour, \"YYYY-MM-DD HH:mm\").toDate();\n    }).property(\"startedAtDay\", \"finishedAtHour\"),\n\n    dayIsValid: (function () {\n      return moment['default'](this.get(\"startedAtDay\"), \"YYYY-MM-DD\").isValid();\n    }).property(\"startedAtDay\"),\n\n    startedAtIsValid: (function () {\n      return moment['default'](this.get(\"startedAtHour\"), \"HH:mm\").isValid();\n    }).property(\"startedAtHour\"),\n\n    finishedAtHourIsValid: (function () {\n      return moment['default'](this.get(\"finishedAtHour\"), \"HH:mm\").isValid();\n    }).property(\"finishedAtHour\"),\n\n    startedAtIsBeforeFinishedAt: (function () {\n      return this.get(\"startedAt\").getTime() <= this.get(\"finishedAt\").getTime();\n    }).property(\"startedAt\", \"finishedAt\"),\n\n    finishedAtIsValid: Ember['default'].computed.and(\"finishedAtHourIsValid\", \"startedAtIsBeforeFinishedAt\"),\n    isValid: Ember['default'].computed.and(\"dayIsValid\", \"startedAtIsValid\", \"finishedAtIsValid\"),\n\n    projectChoices: null,\n\n    selectProject: function (project) {\n      this.setProperties({\n        projectChoices: null,\n        project: project\n      });\n      if (project) {\n        this.set(\"projectName\", project.get(\"name\"));\n      }\n    },\n\n    update: function () {\n      var updatedProperties = this.getProperties(\"title\", \"startedAt\", \"finishedAt\", \"project\");\n      this.get(\"entry\").setProperties(updatedProperties);\n    }\n  });\n\n});","define('tactic/models/entry-list', ['exports', 'ember', 'moment'], function (exports, Ember, moment) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayProxy.extend(Ember['default'].SortableMixin, {\n    content: null,\n    key: null,\n    sortProperties: [\"differedStartedAtTime\"],\n    sortAscending: false,\n\n    date: (function () {\n      var split = this.get(\"key\").split(\"-\");\n      return new Date(split[0], parseInt(split[1]) - 1, split[2]);\n    }).property(\"key\"),\n\n    isBefore: function (otherEntryList) {\n      var date = this.get(\"date\"),\n          otherDate = otherEntryList.get(\"date\");\n      return date < otherDate;\n    },\n\n    time: (function () {\n      return this.get(\"content.lastObject.startedAt\");\n    }).property(\"content.lastObject.startedAt\"),\n\n    duration: (function () {\n      var startedAt, finishedAt;\n\n      return this.get(\"content\").reduce(function (duration, entry) {\n        finishedAt = entry.get(\"differedFinishedAtTime\");\n        startedAt = entry.get(\"differedStartedAtTime\");\n        if (finishedAt && startedAt) {\n          return duration + finishedAt - startedAt;\n        } else {\n          return duration;\n        }\n      }, 0);\n    }).property(\"content.@each.differedStartedAtTime\", \"content.@each.differedFinishedAtTime\"),\n\n    isToday: (function () {\n      return moment['default'](this.get(\"date\")).format(\"YYYY-MM-DD\") === moment['default']().format(\"YYYY-MM-DD\");\n    }).property(\"date\"),\n\n    inCurrentWeek: (function () {\n      var date = this.get(\"date\"),\n          now = new Date();\n      return now.getTime() - date.getTime() < 1000 * 3600 * 24 * 7;\n    }).property(\"date\")\n  });\n\n});","define('tactic/models/entry', ['exports', 'ember-data', 'moment'], function (exports, DS, moment) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    title: DS['default'].attr(\"string\"),\n    startedAt: DS['default'].attr(\"date\"),\n    finishedAt: DS['default'].attr(\"date\"),\n    user: DS['default'].belongsTo(\"User\"),\n    project: DS['default'].belongsTo(\"Project\"),\n\n    duration: (function () {\n      var startedAt = this.get(\"startedAt\"),\n          finishedAt = this.get(\"finishedAt\");\n      if (startedAt && finishedAt) {\n        return finishedAt.getTime() - startedAt.getTime();\n      }\n    }).property(\"startedAt\", \"finishedAt\"),\n\n    projectName: (function () {\n      return this.get(\"project.name\");\n    }).property(\"project.name\"),\n\n    startedAtDay: (function () {\n      return moment['default'](this.get(\"startedAt\")).format(\"YYYY-MM-DD\");\n    }).property(\"startedAt\"),\n\n    startedAtHour: (function () {\n      return moment['default'](this.get(\"startedAt\")).format(\"H:mm\");\n    }).property(\"startedAt\"),\n\n    finishedAtHour: (function () {\n      return moment['default'](this.get(\"finishedAt\")).format(\"H:mm\");\n    }).property(\"finishedAt\")\n  });\n\n});","define('tactic/models/project', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr(\"string\")\n  });\n\n});","define('tactic/models/user', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr(\"string\")\n  });\n\n});","define('tactic/router', ['exports', 'ember', 'tactic/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route(\"login\");\n  });\n\n  exports['default'] = Router;\n\n});","define('tactic/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function () {\n      if (!this.controllerFor(\"application\").get(\"currentUser\")) {\n        this.transitionTo(\"login\");\n        return;\n      }\n      this.store.find(\"entry\");\n    },\n\n    model: function () {\n      var userId = this.controllerFor(\"application\").get(\"currentUser.id\");\n      return this.store.filter(\"entry\", function (entry) {\n        return entry.get(\"startedAt\") && entry.get(\"finishedAt\") && entry.get(\"user.id\") === userId;\n      });\n    },\n\n    setupController: function (controller) {\n      this._super.apply(this, arguments);\n      controller.buildNewEntry();\n    }\n  });\n\n});","define('tactic/routes/login', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function () {\n      return this.store.find(\"user\");\n    },\n\n    actions: {\n      chooseUser: function (user) {\n        this.controllerFor(\"application\").set(\"currentUser\", user);\n        this.transitionTo(\"index\");\n      }\n    }\n  });\n\n});","define('tactic/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].ActiveModelSerializer.extend();\n\n});","define('tactic/templates/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n      <span class=\\\"user\\\">\\n        @ \");\n    stack1 = helpers._triageMustache.call(depth0, \"currentUser.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n      </span>\\n    \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n    <div class=\\\"content\\\">\\n      <section class=\\\"current-week\\\">\\n        <span class=\\\"current-week-btn\\\">\\n          This week\\n        </span>\\n        <div class=\\\"current-week-hover\\\">\\n          <h3>Me</h3>\\n          <ul>\\n            \");\n    stack1 = helpers.each.call(depth0, \"myProjectsDurationInCurrentWeek\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            <li>\\n              <span class=\\\"label total\\\">Total</span>\\n              <span class=\\\"duration\\\">\");\n    data.buffer.push(escapeExpression((helper = helpers['format-duration'] || (depth0 && depth0['format-duration']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"myTotalDurationInCurrentWeek\", options) : helperMissing.call(depth0, \"format-duration\", \"myTotalDurationInCurrentWeek\", options))));\n    data.buffer.push(\"</span>\\n            </li>\\n          </ul>\\n          <h3>Everyone</h3>\\n          <ul>\\n            \");\n    stack1 = helpers.each.call(depth0, \"projectsDurationInCurrentWeek\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            <li>\\n              <span class=\\\"label total\\\">Total</span>\\n              <span class=\\\"duration\\\">\");\n    data.buffer.push(escapeExpression((helper = helpers['format-duration'] || (depth0 && depth0['format-duration']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"totalDurationInCurrentWeek\", options) : helperMissing.call(depth0, \"format-duration\", \"totalDurationInCurrentWeek\", options))));\n    data.buffer.push(\"</span>\\n            </li>\\n          </ul>\\n        </div>\\n      </section>\\n    </div>\\n  \");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n              <li>\\n                <span class=\\\"label\\\">\\n                  \");\n    stack1 = helpers['if'].call(depth0, \"project\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </span>\\n                <span class=\\\"duration\\\">\\n                  \");\n    data.buffer.push(escapeExpression((helper = helpers['format-duration'] || (depth0 && depth0['format-duration']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"duration\", options) : helperMissing.call(depth0, \"format-duration\", \"duration\", options))));\n    data.buffer.push(\"\\n                </span>\\n              </li>\\n            \");\n    return buffer;\n    }\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                    \");\n    stack1 = helpers._triageMustache.call(depth0, \"project.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                  \");\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                    <i>No project</i>\\n                  \");\n    }\n\n    data.buffer.push(\"<div class=\\\"header\\\">\\n  <h1>\\n    <span class=\\\"brand\\\">\\n      Tactic\\n    </span>\\n    \");\n    stack1 = helpers['if'].call(depth0, \"currentUser\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n  </h1>\\n\\n  \");\n    stack1 = helpers['if'].call(depth0, \"currentUser\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n</div>\\n\\n<div class=\\\"content\\\">\\n  \");\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n</div>\\n\");\n    return buffer;\n    \n  });\n\n});","define('tactic/templates/entry-edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n      <div class=\\\"project-choices\\\">\\n        <ul>\\n          \");\n    stack1 = helpers.each.call(depth0, \"project\", \"in\", \"projectChoices\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </ul>\\n      </div>\\n    \");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n            <li \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"selectProject\", \"project\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"project.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</li>\\n          \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<div>\\n  \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"title\"),\n      'classNames': (\"title focus-title\")\n    },hashTypes:{'value': \"ID\",'classNames': \"STRING\"},hashContexts:{'value': depth0,'classNames': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n  <div class=\\\"project\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers['select-on-focus-input'] || (depth0 && depth0['select-on-focus-input']),options={hash:{\n      'value': (\"projectName\"),\n      'classNames': (\"focus-project\")\n    },hashTypes:{'value': \"ID\",'classNames': \"STRING\"},hashContexts:{'value': depth0,'classNames': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"select-on-focus-input\", options))));\n    data.buffer.push(\"\\n    \");\n    stack1 = helpers['if'].call(depth0, \"projectChoices\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n  </div>\\n  <span class=\\\"date\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"startedAtDay\"),\n      'classBinding': (\"dayIsValid::error\")\n    },hashTypes:{'value': \"ID\",'classBinding': \"STRING\"},hashContexts:{'value': depth0,'classBinding': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n  </span>\\n  <span class=\\\"time\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"startedAtHour\"),\n      'classBinding': (\":focus-time startedAtIsValid::error\")\n    },hashTypes:{'value': \"ID\",'classBinding': \"STRING\"},hashContexts:{'value': depth0,'classBinding': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n  </span>\\n  to\\n  <span class=\\\"time\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"finishedAtHour\"),\n      'classBinding': (\"finishedAtIsValid::error\")\n    },hashTypes:{'value': \"ID\",'classBinding': \"STRING\"},hashContexts:{'value': depth0,'classBinding': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n  </span>\\n</div>\\n<div class=\\\"actions\\\">\\n  <a href=\\\"\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"restoreEntry\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Cancel</a>\\n</div>\\n\");\n    return buffer;\n    \n  });\n\n});","define('tactic/templates/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n      <div class=\\\"project-choices\\\">\\n        <ul>\\n          \");\n    stack1 = helpers.each.call(depth0, \"project\", \"in\", \"projectChoices\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </ul>\\n      </div>\\n    \");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n            <li \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"selectProject\", \"project\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"project.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</li>\\n          \");\n    return buffer;\n    }\n\n  function program4(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n    <button class=\\\"stop-button\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"stopTimer\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Stop</button>\\n  \");\n    return buffer;\n    }\n\n  function program6(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n    <button class=\\\"start-button\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"startTimer\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Start</button>\\n  \");\n    return buffer;\n    }\n\n  function program8(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n    <h2 \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"entryList.key\")\n    },hashTypes:{'title': \"ID\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n      \");\n    stack1 = helpers['if'].call(depth0, \"entryList.isToday\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n      <span class=\\\"duration\\\">\\n        \");\n    data.buffer.push(escapeExpression((helper = helpers['format-duration'] || (depth0 && depth0['format-duration']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"entryList.duration\", options) : helperMissing.call(depth0, \"format-duration\", \"entryList.duration\", options))));\n    data.buffer.push(\"\\n      </span>\\n    </h2>\\n    <ul>\\n      \");\n    stack1 = helpers.each.call(depth0, \"entry\", \"in\", \"entryList\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </ul>\\n  \");\n    return buffer;\n    }\n  function program9(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n        Today\\n      \");\n    }\n\n  function program11(depth0,data) {\n    \n    var stack1;\n    stack1 = helpers['if'].call(depth0, \"entryList.inCurrentWeek\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    }\n  function program12(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n        \");\n    data.buffer.push(escapeExpression((helper = helpers.ago || (depth0 && depth0.ago),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"entryList.time\", options) : helperMissing.call(depth0, \"ago\", \"entryList.time\", options))));\n    data.buffer.push(\"\\n      \");\n    return buffer;\n    }\n\n  function program14(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n        \");\n    data.buffer.push(escapeExpression((helper = helpers.moment || (depth0 && depth0.moment),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"entryList.time\", \"ll\", options) : helperMissing.call(depth0, \"moment\", \"entryList.time\", \"ll\", options))));\n    data.buffer.push(\"\\n      \");\n    return buffer;\n    }\n\n  function program16(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n        \");\n    stack1 = helpers['if'].call(depth0, \"entry.isEditing\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(19, program19, data),fn:self.program(17, program17, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n      \");\n    return buffer;\n    }\n  function program17(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n          \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"entry-edit\", {hash:{\n      'context': (\"entry.editForm\"),\n      'focusOn': (\"entry.editFocus\")\n    },hashTypes:{'context': \"ID\",'focusOn': \"ID\"},hashContexts:{'context': depth0,'focusOn': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n        \");\n    return buffer;\n    }\n\n  function program19(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n          <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":entry entry.isDeleting:deleting\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n            <div>\\n              <span class=\\\"title\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"editEntry\", \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\">\\n                \");\n    stack1 = helpers['if'].call(depth0, \"entry.title\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(22, program22, data),fn:self.program(20, program20, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n              </span>\\n              <span class=\\\"project\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"editEntry\", \"project\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\">\\n                \");\n    stack1 = helpers['if'].call(depth0, \"entry.project.name\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(26, program26, data),fn:self.program(24, program24, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n              </span>\\n              <span class=\\\"duration\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"editEntry\", \"time\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\">\");\n    data.buffer.push(escapeExpression((helper = helpers['format-duration'] || (depth0 && depth0['format-duration']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"entry.duration\", options) : helperMissing.call(depth0, \"format-duration\", \"entry.duration\", options))));\n    data.buffer.push(\"</span>\\n              <span class=\\\"time-range\\\"  \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"editEntry\", \"time\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\">\\n                \");\n    stack1 = helpers._triageMustache.call(depth0, \"entry.startedAtHour\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                -\\n                \");\n    stack1 = helpers._triageMustache.call(depth0, \"entry.finishedAtHour\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n              </span>\\n            </div>\\n            <div class=\\\"actions\\\">\\n              \");\n    stack1 = helpers['if'].call(depth0, \"entry.saveScheduled\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(30, program30, data),fn:self.program(28, program28, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </div>\\n          </li>\\n        \");\n    return buffer;\n    }\n  function program20(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                  \");\n    stack1 = helpers._triageMustache.call(depth0, \"entry.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                \");\n    return buffer;\n    }\n\n  function program22(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                  <i>No title</i>\\n                \");\n    }\n\n  function program24(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                  \");\n    stack1 = helpers._triageMustache.call(depth0, \"entry.project.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                \");\n    return buffer;\n    }\n\n  function program26(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                  <i>No project</i>\\n                \");\n    }\n\n  function program28(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                <a href=\\\"\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancelSaveEntry\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">\\n                  Restore changes\\n                </a>\\n              \");\n    return buffer;\n    }\n\n  function program30(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\" \");\n    stack1 = helpers['if'].call(depth0, \"entry.isDeleting\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(33, program33, data),fn:self.program(31, program31, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    return buffer;\n    }\n  function program31(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                <a href=\\\"\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancelDeleteEntry\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">\\n                  Cancel deletion\\n                </a>\\n              \");\n    return buffer;\n    }\n\n  function program33(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                <a href=\\\"\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"deleteEntry\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Delete</a>\\n              \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<section class=\\\"new-entry\\\">\\n  \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'classNames': (\"title\"),\n      'placeholder': (\"What are you working on ?\"),\n      'value': (\"newEntry.title\"),\n      'action': (\"startTimer\"),\n      'key-press': (\"startTimer\")\n    },hashTypes:{'classNames': \"STRING\",'placeholder': \"STRING\",'value': \"ID\",'action': \"STRING\",'key-press': \"STRING\"},hashContexts:{'classNames': depth0,'placeholder': depth0,'value': depth0,'action': depth0,'key-press': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n  <div class=\\\"project\\\">\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers['select-on-focus-input'] || (depth0 && depth0['select-on-focus-input']),options={hash:{\n      'classNames': (\"project-input\"),\n      'placeholder': (\"Project\"),\n      'value': (\"newEntryProjectName\")\n    },hashTypes:{'classNames': \"STRING\",'placeholder': \"STRING\",'value': \"ID\"},hashContexts:{'classNames': depth0,'placeholder': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"select-on-focus-input\", options))));\n    data.buffer.push(\"\\n    \");\n    stack1 = helpers['if'].call(depth0, \"projectChoices\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n  </div>\\n  \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'classNames': (\"duration\"),\n      'disabled': (\"disabled\"),\n      'value': (\"newEntryDuration\")\n    },hashTypes:{'classNames': \"STRING\",'disabled': \"STRING\",'value': \"ID\"},hashContexts:{'classNames': depth0,'disabled': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n  \");\n    stack1 = helpers['if'].call(depth0, \"timerStarted\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n</section>\\n\\n<section class=\\\"entry-list\\\">\\n  \");\n    stack1 = helpers.each.call(depth0, \"entryList\", \"in\", \"entriesByDay\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('tactic/templates/login', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n      <li \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"chooseUser\", \"user\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">@\");\n    stack1 = helpers._triageMustache.call(depth0, \"user.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</li>\\n    \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<section class=\\\"login\\\">\\n  <h1>Sign in</h1>\\n  <ul>\\n    \");\n    stack1 = helpers.each.call(depth0, \"user\", \"in\", \"\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n  </ul>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('tactic/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/components/select-on-focus-input.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/select-on-focus-input.js should pass jshint', function() { \n    ok(true, 'components/select-on-focus-input.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/controllers/entry.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/entry.js should pass jshint', function() { \n    ok(true, 'controllers/entry.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/controllers/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/index.js should pass jshint', function() { \n    ok(true, 'controllers/index.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/helpers/format-duration.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/format-duration.js should pass jshint', function() { \n    ok(true, 'helpers/format-duration.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/helpers/resolver', ['exports', 'ember/resolver', 'tactic/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('tactic/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/helpers/start-app', ['exports', 'ember', 'tactic/app', 'tactic/router', 'tactic/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('tactic/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/models/entry-form.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/entry-form.js should pass jshint', function() { \n    ok(true, 'models/entry-form.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/models/entry-list.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/entry-list.js should pass jshint', function() { \n    ok(true, 'models/entry-list.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/models/entry.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/entry.js should pass jshint', function() { \n    ok(true, 'models/entry.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/models/project.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/project.js should pass jshint', function() { \n    ok(true, 'models/project.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/models/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/user.js should pass jshint', function() { \n    ok(true, 'models/user.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/routes/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/login.js should pass jshint', function() { \n    ok(true, 'routes/login.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/test-helper', ['tactic/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('tactic/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/unit/controllers/entry-test', ['ember-qunit', 'ember'], function (ember_qunit, Ember) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:entry\", \"EntryController\", {\n    // Specify the other units that are required for this test.\n    needs: [\"controller:index\"]\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var entry = Ember['default'].Object.create({ startedAt: new Date(), finishedAt: new Date() });\n    var controller = this.subject({ content: entry });\n    ok(controller);\n  });\n\n});","define('tactic/tests/unit/controllers/entry-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/entry-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/entry-test.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/unit/controllers/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:index\", \"IndexController\", {\n    // Specify the other units that are required for this test.\n    needs: [\"controller:application\"]\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n});","define('tactic/tests/unit/controllers/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/index-test.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/unit/models/entry-list-test', ['ember-qunit', 'ember', 'tactic/models/entry-list'], function (ember_qunit, Ember, EntryList) {\n\n  'use strict';\n\n  function subject() {\n    return EntryList['default'].create({\n      content: [Ember['default'].Object.create({\n        startedAt: new Date(\"2015-02-11T09:22:33Z\"),\n        finishedAt: new Date(\"2015-02-11T12:37:29Z\")\n      }), Ember['default'].Object.create({\n        startedAt: new Date(\"2015-02-11T08:00:00Z\"),\n        finishedAt: new Date(\"2015-02-11T12:00:00Z\")\n      })],\n      key: \"2015-02-11\"\n    });\n  }\n\n  module(\"EntryList\");\n\n  ember_qunit.test(\"it exists\", function () {\n    var model = subject();\n    ok(!!model);\n  });\n\n  ember_qunit.test(\"is is today\", function () {\n    var model = subject(),\n        now = new Date();\n    Ember['default'].run(function () {\n      model.set(\"key\", [now.getFullYear(), now.getMonth() + 1, now.getDate()].join(\"-\"));\n    });\n    ok(model.get(\"isToday\"));\n  });\n\n  ember_qunit.test(\"it is not today\", function () {\n    var model = subject();\n    ok(!model.get(\"isToday\"));\n  });\n\n  ember_qunit.test(\"is in current week\", function () {\n    var model = subject(),\n        now = new Date();\n    Ember['default'].run(function () {\n      model.set(\"key\", [now.getFullYear(), now.getMonth() + 1, now.getDate()].join(\"-\"));\n    });\n    ok(model.get(\"inCurrentWeek\"));\n  });\n\n  ember_qunit.test(\"it is not in current week\", function () {\n    var model = subject();\n    ok(!model.get(\"inCurrentWeek\"));\n  });\n\n});","define('tactic/tests/unit/models/entry-list-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/entry-list-test.js should pass jshint', function() { \n    ok(true, 'unit/models/entry-list-test.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/unit/models/entry-test', ['ember-qunit', 'ember'], function (ember_qunit, Ember) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"entry\", \"Entry\", {\n    // Specify the other units that are required for this test.\n    needs: [\"model:Project\", \"model:User\"]\n  });\n\n  ember_qunit.test(\"it exists\", function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n  ember_qunit.test(\"duration exists\", function () {\n    var model = this.subject(),\n        startedAt = new Date(\"2015-01-01T11:00:00Z\"),\n        finishedAt = new Date(\"2015-01-01T13:24:37Z\");\n    Ember['default'].run(function () {\n      model.setProperties({\n        startedAt: startedAt,\n        finishedAt: finishedAt\n      });\n    });\n    equal(model.get(\"duration\"), finishedAt.getTime() - startedAt.getTime(), \"The duration is properly computed\");\n  });\n\n});","define('tactic/tests/unit/models/entry-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/entry-test.js should pass jshint', function() { \n    ok(true, 'unit/models/entry-test.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/unit/models/project-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"project\", \"Project\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('tactic/tests/unit/models/project-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/project-test.js should pass jshint', function() { \n    ok(true, 'unit/models/project-test.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:index\", \"IndexRoute\", {});\n\n  ember_qunit.test(\"it exists\", function () {\n    var route = this.subject();\n    ok(route);\n  });\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('tactic/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/index-test.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/utils/format-duration.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/format-duration.js should pass jshint', function() { \n    ok(true, 'utils/format-duration.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/utils/group-by.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/group-by.js should pass jshint', function() { \n    ok(true, 'utils/group-by.js should pass jshint.'); \n  });\n\n});","define('tactic/tests/views/entry-edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/entry-edit.js should pass jshint', function() { \n    ok(true, 'views/entry-edit.js should pass jshint.'); \n  });\n\n});","define('tactic/utils/format-duration', ['exports'], function (exports) {\n\n  'use strict';\n\n\n\n  exports['default'] = formatDuration;\n  function integerToStringWithTwoNumbers(integer) {\n    var string = \"\" + integer;\n    if (string.length === 1) {\n      string = \"0\" + string;\n    }\n    return string;\n  }function formatDuration(durationInMs) {\n    var durationInS = parseInt(durationInMs / 1000);\n    var hours = parseInt(durationInS / 3600),\n        minutes = integerToStringWithTwoNumbers(parseInt(durationInS / 60) % 60),\n        seconds = integerToStringWithTwoNumbers(parseInt(durationInS) % 60);\n    return \"\" + hours + \":\" + minutes + \":\" + seconds;\n  }\n\n});","define('tactic/utils/group-by', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var get = Ember['default'].get,\n      arrayComputed = Ember['default'].arrayComputed;\n\n  exports['default'] = function (dependentKey, property, groupClass) {\n    var options = {\n      initialValue: [],\n\n      addedItem: function (array, item) {\n        var key = get(item, property),\n            group = array.findBy(\"key\", key);\n        if (!group) {\n          group = groupClass.create({\n            content: [],\n            key: key\n          });\n          var index = array.indexOf(array.find(function (otherGroup) {\n            return otherGroup.isBefore(group);\n          }));\n          if (index === -1) {\n            array.pushObject(group);\n          } else {\n            array.insertAt(index, group);\n          }\n        }\n\n        group.pushObject(item);\n\n        return array;\n      },\n\n      removedItem: function (array, item) {\n        var group = array.find(function (g) {\n          return g.contains(item);\n        });\n        if (!group) {\n          return;\n        }\n\n        group.removeObject(item);\n\n        if (get(group, \"length\") === 0) {\n          array.removeObject(group);\n        }\n        return array;\n      }\n\n    };\n    return arrayComputed(dependentKey, options);\n  };\n\n});","define('tactic/views/entry-edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].View.extend({\n    templateName: \"entry-edit\",\n    tagName: \"li\",\n    classNames: \"entry entry-edit\",\n    focusOn: null,\n\n    becomeFocused: (function () {\n      var focusOn = this.get(\"focusOn\");\n      if (focusOn) {\n        this.$(\".focus-\" + focusOn).focus();\n      }\n    }).on(\"didInsertElement\"),\n\n    mouseUpEventName: (function () {\n      return \"mouseup.\" + this.get(\"elementId\");\n    }).property(\"elementId\"),\n\n    setScheduleSaveOnMouseUp: (function () {\n      var self = this,\n          eventName = this.get(\"mouseUpEventName\");\n      Ember['default'].$(document).on(eventName, function (event) {\n        if (self.$().has(event.target).length === 0) {\n          self.get(\"controller\").send(\"scheduleSaveEntry\");\n        }\n      });\n    }).on(\"didInsertElement\"),\n\n    removeScheduleSaveOnMouseUp: (function () {\n      var eventName = this.get(\"mouseUpEventName\");\n      Ember['default'].$(document).off(eventName);\n    }).on(\"willClearRender\")\n  });\n\n});","/* jshint ignore:start */\n\ndefine('tactic/config/environment', ['ember'], function(Ember) {\n  var prefix = 'tactic';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"tactic/tests/test-helper\");\n} else {\n  require(\"tactic/app\")[\"default\"].create({\"name\":\"tactic\",\"version\":\"0.0.0.e39fcc91\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACznxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"tactic.js"}